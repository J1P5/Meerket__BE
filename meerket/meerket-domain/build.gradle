dependencies {
    implementation project(':meerket-common')

    //공간 데이터를 위한
    implementation 'org.hibernate:hibernate-core:6.4.1.Final'
    implementation 'org.hibernate:hibernate-spatial:6.4.1.Final'
    implementation 'org.locationtech.jts:jts-core:1.19.0'

    // 채팅에서 mongodb 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'




    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    /* query dsl */
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    //spatial db
    implementation 'org.hibernate:hibernate-spatial:6.4.1.Final'
    implementation 'org.locationtech.jts:jts-core:1.18.1'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

//querydsl 추가 시작
def querydslSrcDir = "$projectDir/build/generated"
clean {
    delete file(querydslSrcDir)
}

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

test {
    useJUnitPlatform()
}

bootJar {
    enabled = false
}